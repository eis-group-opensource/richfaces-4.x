<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<faces-config version="2.0" metadata-complete="false" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_2_0.xsd" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:cdk="http://jboss.org/schema/richfaces/cdk/extensions" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:commandButton&amp;gt; component is similar to the JavaServer Faces (JSF) &amp;lt;h:commandButton&amp;gt; component,
 but additionally includes Ajax support.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.CommandButton</component-type>
        <component-class>org.richfaces.component.UICommandButton</component-class>
        <property>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <property-name>accesskey</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
            <property-name>resetValues</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "execute" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "render" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Type of button to create. Can be one of "submit", "button", "image" and "reset". If not specified, the default value is "submit".</description>
            <display-name>Button Type</display-name>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <default-value>"submit"</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">click</cdk:event-name>
                <cdk:event-name default="false">action</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Absolute or relative URL of the image to be displayed for this button. If specified, this "input" element will
 be of type "image". Otherwise, it will be of the type specified by the "type" property with a label specified
 by the "value" property
</description>
            <property-name>image</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> This attribute specifies the position of the current element in the tabbing order for the current document.
 This value must be a number between 0 and 32767. User agents should ignore leading zeros
</description>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractCommandButton</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>commandButton</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Command</cdk:component-family>
            <cdk:renderer-type>org.richfaces.CommandButtonRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:attachQueue&amp;gt; behavior is used together with a &amp;lt;a4j:queue&amp;gt; component to further customize queuing for
 particular components and behaviors. The &amp;lt;a4j:attachQueue&amp;gt; behavior can override the scope-wide queue settings for
 an individual component, or attach specific requests to a queue.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.AttachQueue</component-type>
        <component-class>org.richfaces.component.UIAttachQueue</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute allows you to ignore an Ajax response produced by a request if the newest 'similar' request is in the
 queue already. ignoreDupResponses="true" does not cancel the request while it is processed on the server, but
 just allows avoiding unnecessary updates on the client side if the response isn't actual now
</description>
            <property-name>ignoreDupResponses</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the request is removed from the queue
</description>
            <property-name>onrequestdequeue</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Identify the name of the destination queue
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the request is added to the queue
</description>
            <property-name>onrequestqueue</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines the time (in ms) the request will be waiting in the queue before it is ready to be sent.
</description>
            <property-name>requestDelay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specify the groupingId to process multiple requests together. Requests from multiple &lt;a4j:attachQueue&gt; behaviors
 can use the same identifier to group requests together
</description>
            <property-name>requestGroupingId</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAttachQueue</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>attachQueue</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.AttachQueueHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.AttachQueue</cdk:component-family>
            <cdk:renderer-type>org.richfaces.AttachQueueRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:mediaOutput&amp;gt; component is used for generating images, video, sounds, and other resources defined on the fly.
 &lt;/p&gt;

 @author shura
</description>
        <component-type>org.richfaces.MediaOutput</component-type>
        <component-class>org.richfaces.component.UIMediaOutput</component-class>
        <property>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <property-name>accesskey</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element loses focus.</description>
            <display-name>Focus Off Script</display-name>
            <property-name>onblur</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">blur</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when this element receives focus.</description>
            <display-name>Focus On Script</display-name>
            <property-name>onfocus</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">focus</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Position of this element in the tabbing order for the current document.  This value must be an integer between 0 and 32767.</description>
            <display-name>Tab Index</display-name>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this attribute is a space-separated list of link types.</description>
            <display-name>Reverse Link</display-name>
            <property-name>rev</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The content type of the resource designated by this hyperlink.</description>
            <display-name>Content Type</display-name>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The character encoding of the resource designated by this hyperlink.</description>
            <display-name>Character Set</display-name>
            <property-name>charset</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The shape of the hot spot on the screen (for use in client-side image maps). Valid values are: default (entire region); rect (rectangular region); circle (circular region); and poly (polygonal region).</description>
            <display-name>Shape</display-name>
            <property-name>shape</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 The attribute specifies shape and it position on the screen. Possible values: "rect: left-x, top-y, right-x,
 bottom-y", "circle: center-x, center-y, radius", "poly: x1, y1, x2, y2, ..., xN, yN".
 &lt;/p&gt;
 &lt;p&gt;
 Notes:
 &lt;ol&gt;
     &lt;li&gt;when giving the radius value in percents, user agents should calculate the final radius value in pixels
 based on the associated object's width and height;&lt;/li&gt;
      &lt;li&gt;the radius value should be smaller than center-x and center-y values;&lt;/li&gt;
      &lt;li&gt;for a polygon, the first and last coordinate pairs should have same x and y to close the shape (x1=xN; y1=yN)
 (when these coordinates are different, user agents should infer an additional pair to close a polygon).&lt;/li&gt;
 &lt;/ol&gt;
 Coordinates are relative to the top left corner of an object. All values are lengths. All values are comma separated.
 &lt;/p&gt;
</description>
            <display-name>Coordinates</display-name>
            <property-name>coords</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The language code of the resource designated by this hyperlink.</description>
            <display-name>Language</display-name>
            <property-name>hreflang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The relationship from the current document to the anchor specified by this hyperlink. The value of this attribute is a space-separated list of link types.</description>
            <display-name>Relationship</display-name>
            <property-name>rel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">click</cdk:event-name>
                <cdk:event-name default="false">action</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of a frame where the resource retrieved via this hyperlink is to be displayed.</description>
            <display-name>Target Frame</display-name>
            <property-name>target</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Converter instance registered with this component.
        </description>
            <display-name>Converter</display-name>
            <icon/>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> &lt;p&gt;
 Data value calculated at render time and stored in URI (also as part of cache Key ), at generation time passed
 to send method. Can be used for update cache at change of generating conditions, and for creating beans as
 "Lightweight" pattern components (request scope).
 &lt;/p&gt;
 &lt;p&gt;
 IMPORTANT: Since serialized data stored in URI, avoid using big objects.
 &lt;/p&gt;
</description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Deprecated. This attribute specifies the position of an IMG, OBJECT, or APPLET with respect to its context.
 The possible values are "bottom", "middle", "top", "left" and "right". The default value is "middle".
</description>
            <property-name>align</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute allows to manage caching. A browser can send request with the header "If-Modified-Since" for
 necessity of object reloading.
 If time of modification is earlier, then the framework doesn't call generation and return code 304.
</description>
            <property-name>lastModified</property-name>
            <property-class>java.util.Date</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Base URI for classid, data, archive
</description>
            <property-name>codebase</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute is a flag that defines the caching strategy. If 'cacheable' is set to false, the response will not be cached.
 If it is set to true, it will be cached and the serialized value of 'value' attribute plays the role of a cache key.
</description>
            <property-name>cacheable</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Deprecated. This attribute specifies the amount of white space to be inserted above and below an IMG, APPLET, or OBJECT.
 The default value is not specified, but is generally a small, non-zero length
</description>
            <property-name>vspace</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies an image as a client-side image-map
</description>
            <property-name>usemap</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Get URI attribute for resource ( src for images, href for links etc ).
</description>
            <property-name>uriAttribute</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Defines content type for code
</description>
            <property-name>codetype</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Geterated content mime-type for append to response header ( 'image/jpeg' etc )
</description>
            <property-name>mimeType</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Declare but don't instantiate flag
</description>
            <property-name>declare</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Method call expression to send generated resource to OutputStream. It must have two parameter with a type of
 java.io.OutputStream and java.lang.Object ( deserialized value of data attribute )
</description>
            <property-name>createContent</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Message to show while loading
</description>
            <property-name>standby</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies a space-separated list of URIs
</description>
            <property-name>archive</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Get the Element name for rendering ( img , a , object, applet ).
</description>
            <property-name>element</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Filename of the resource to be served
</description>
            <property-name>fileName</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Deprecated. This attribute specifies the amount of white space to be inserted to the left and right of an
 IMG, APPLET, or OBJECT. The default value is not specified, but is generally a small, non-zero length
</description>
            <property-name>hspace</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Use server-side image map
</description>
            <property-name>ismap</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute allows to manage caching and defines the period after which a resource is reloaded.
</description>
            <property-name>expires</property-name>
            <property-class>java.util.Date</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Identifies an implementation
</description>
            <property-name>classid</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Deprecated. This attribute specifies the width of an IMG or OBJECT border, in pixels.
 The default value for this attribute depends on the user agent
</description>
            <property-name>border</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractMediaOutput</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>mediaOutput</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.MediaOutputHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.MediaOutput</cdk:component-family>
            <cdk:renderer-type>org.richfaces.MediaOutputRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:param&amp;gt; behavior combines the functionality of the JavaServer Faces (JSF) components
 &amp;lt;f:param&amp;gt; and &amp;lt;f:actionListener&amp;gt;.
 &lt;/p&gt;
 @author shura, alexsmirnov
</description>
        <component-type>org.richfaces.Parameter</component-type>
        <component-class>org.richfaces.component.UIParameter</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Name of the parameter associated with this component.
        </description>
            <display-name>Property Name</display-name>
            <icon/>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>true</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Value of the parameter associated with this component.
        </description>
            <display-name>Property Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> EL expression for updatable bean property. This property will be updated if the parent command component performs an actionEvent.
</description>
            <property-name>assignTo</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The converter attribute can be used to specify how to convert the value before it is submitted to the data model.
</description>
            <property-name>converter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If set to true, the value will not enclosed within single quotes and there will be no escaping of characters.
 This allows the use of the value as JavaScript code for calculating value on the client-side.
 This doesn't work with non-AJAX components.
</description>
            <property-name>noEscape</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractParameter</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>param</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.ParameterHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Parameter</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:status&amp;gt; component displays the status of current Ajax requests. The status can be either in progress,
 complete, or an error is shown after a failed request.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.Status</component-type>
        <component-class>org.richfaces.component.UIStatus</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The css style attribute for the start text
</description>
            <property-name>startStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the request completes successfully
</description>
            <property-name>onsuccess</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">success</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text shown once the request is complete
</description>
            <property-name>stopText</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The css class attribute used to style the start text
</description>
            <property-name>startStyleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the request stops
</description>
            <property-name>onstop</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">stop</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text shown when an error has occurred
</description>
            <property-name>errorText</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The css class attribute used to style the stop text
</description>
            <property-name>stopStyleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The css style attribute for the error text
</description>
            <property-name>errorStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the request results in an error
</description>
            <property-name>onerror</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">error</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The css style attribute for the stop text
</description>
            <property-name>stopStyle</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of the status component
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the request starts
</description>
            <property-name>onstart</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">start</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The text shown after the request has been started and is currently in progress
</description>
            <property-name>startText</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The css class attribute used to style the error text
</description>
            <property-name>errorStyleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAjaxStatus</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>status</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Status</cdk:component-family>
            <cdk:renderer-type>org.richfaces.StatusRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The non-visual &amp;lt;a4j:repeat&amp;gt; component is used to iterate through a data model. The component renders child content for
 every iteration according to the current object data.
 &lt;/p&gt;

 @author Nick Belaevski
</description>
        <component-type>org.richfaces.Repeat</component-type>
        <component-class>org.richfaces.component.UIRepeat</component-class>
        <property>
            <description>The number of rows to display, or zero for all remaining rows in the table</description>
            <property-name>rows</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Converter for a row key object</description>
            <property-name>rowKeyConverter</property-name>
            <property-class>javax.faces.convert.Converter</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The attribute provides access to a component state on the client side
</description>
            <property-name>stateVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A request-scope attribute via which the data object for the current row will be used when iterating</description>
            <property-name>var</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Boolean attribute that defines whether this iteration component will reset saved children's state before rendering. By
 default state is reset if there are no faces messages with severity error or higher.
</description>
            <property-name>keepSaved</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the row key in a Request scope</description>
            <property-name>rowKeyVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A zero-relative row number of the first row to display</description>
            <property-name>first</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Points to the data model</description>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Provides access to the iteration status in a Request scope</description>
            <property-name>iterationStatusVar</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.UIRepeat</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>repeat</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.RepeatHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Data</cdk:component-family>
            <cdk:renderer-type>org.richfaces.RepeatRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:push&amp;gt; component performs real-time updates on the client side from events triggered at the server side. The
 events are pushed out to the client through the RichFaces messaging queue (which is bound to Java Messaging Service - JMS).
 When the &amp;lt;a4j:push&amp;gt; component is triggered by a server event, it can in turn cause Ajax updates and changes.
 &lt;/p&gt;

 @author Nick Belaevski
 @author Lukas Fryc
</description>
        <component-type>org.richfaces.Push</component-type>
        <component-class>org.richfaces.component.UIPush</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when push is subscribed successfully to the topic.
</description>
            <property-name>onsubscribed</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">subscribed</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an error has occurred with the push notifications
</description>
            <property-name>onerror</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">error</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> References the topic on the JMS server that contains the pushed messages
</description>
            <property-name>address</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when a push notification is received
</description>
            <property-name>ondataavailable</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dataavailable</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPush</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>push</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Push</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PushRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:region&amp;gt; component specifies a part of the JSF component tree to be processed on the server.
 The region causes all the a4j and rich Ajax controls to execute: decoding, validating, and updating the model.
 The region causes these components to execute even if not explicitly declared. As such, processing areas can more
 easily be marked using a declarative approach.
 &lt;/p&gt;
 &lt;p&gt;
 Regions can be nested, in which case only the parent region of the component initiating the request will be processed.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.Region</component-type>
        <component-class>org.richfaces.component.UIRegion</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractRegion</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>region</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.AjaxContainer</cdk:component-family>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:queue&amp;gt; component manages the JSF queue of Ajax requests. It provides additional options for a finer
 control of request processing.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.Queue</component-type>
        <component-class>org.richfaces.component.UIQueue</component-class>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute allows you to ignore an Ajax response produced by a request if the newest 'similar' request is in the
 queue already. ignoreDupResponses="true" does not cancel the request while it is processed on the server, but
 just allows avoiding unnecessary updates on the client side if the response isn't actual now
</description>
            <property-name>ignoreDupResponses</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the request is removed from the queue
</description>
            <property-name>onrequestdequeue</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an error has occurred during Ajax communications
</description>
            <property-name>onerror</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies the name for the queue, allowing it to be referenced via the name attribute of the attachQueue component
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the request is completed
</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before DOM is updated
</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when the request is added to the queue
</description>
            <property-name>onrequestqueue</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before an ajax request is submitted
</description>
            <property-name>onsubmit</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Attribute defines the time (in ms) the request will be waiting in the queue before it is ready to be sent.
</description>
            <property-name>requestDelay</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractQueue</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>queue</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Queue</cdk:component-family>
            <cdk:renderer-type>org.richfaces.QueueRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:outputPanel&amp;gt; component is used to group together components in to update them as a whole, rather than having
 to specify the components individually.
 &lt;p&gt;

 @author asmirnov@exadel.com
</description>
        <component-type>org.richfaces.OutputPanel</component-type>
        <component-class>org.richfaces.component.UIOutputPanel</component-class>
        <property>
            <description>Defines, whether the content of this component must be (or not) included in AJAX response created by parent AJAX Container, even if it is not forced by reRender list of ajax action. Ignored if component marked to output by some Ajax action component. Default value - "true"</description>
            <property-name>ajaxRendered</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag to mark all child components to non-transient. If true, all children components will be set to non-transient state and keep in saved components tree. For output in self-renderer region all content ( By default, all content in &amp;lt;f:verbatim&amp;gt; tags and non-jsf elements in facelets, marked as transient - since, self-rendered ajax regions don't plain output for ajax processing ).</description>
            <property-name>keepTransient</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">click</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Direction indication for text that does not inherit directionality. Valid values are "LTR" (left-to-right) and "RTL" (right-to-left).</description>
            <display-name>Direction</display-name>
            <property-name>dir</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Code describing the language used in the generated markup for this component.</description>
            <display-name>Language Code</display-name>
            <property-name>lang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> HTML layout for generated markup. Possible values: "block" for generating an HTML &amp;lt;div&amp;gt; element and "inline" for
 generating an HTML &amp;lt;span&amp;gt; element.

 Default value is "inline"
</description>
            <property-name>layout</property-name>
            <property-class>org.richfaces.component.OutputPanelLayout</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractOutputPanel</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>outputPanel</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Panel</cdk:component-family>
            <cdk:renderer-type>org.richfaces.OutputPanelRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:jsFunction&amp;gt; component performs Ajax requests directly from JavaScript code and retrieves server-side data.
 The server-side data is returned in JavaScript Object Notation (JSON) format prior to the execution of any JavaScript
 code defined using the "oncomplete" attribute.
 &lt;/p&gt;
 @author asmirnov@exadel.com
</description>
        <component-type>org.richfaces.Function</component-type>
        <component-class>org.richfaces.component.UIFunction</component-class>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
            <property-name>resetValues</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "execute" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "render" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The name of the generated javascript function
</description>
            <property-name>name</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>true</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAjaxFunction</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>jsFunction</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Command</cdk:component-family>
            <cdk:renderer-type>org.richfaces.FunctionRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:log&amp;gt; component generates JavaScript that opens a debug window, logging application information such as
 requests, responses, and DOM changes.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.AjaxLog</component-type>
        <component-class>org.richfaces.component.UIAjaxLog</component-class>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Sets the logging level, can be one of 'debug', 'info', 'warn', 'error'.
</description>
            <property-name>level</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Determines how the log appears on the page, can be one of: "inline", "popup". When set to "popup", the popup
 window is opened by pressing the key combination Ctrl + Shift + L
</description>
            <property-name>mode</property-name>
            <property-class>org.richfaces.component.LogMode</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractAjaxLog</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>log</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.AjaxLog</cdk:component-family>
            <cdk:renderer-type>org.richfaces.AjaxLogRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:poll&amp;gt; component allows periodical sending of Ajax requests to the server. It is used for repeatedly
 updating a page at specific time intervals.
 &lt;/p&gt;
 @author shura
</description>
        <component-type>org.richfaces.Poll</component-type>
        <component-class>org.richfaces.component.UIPoll</component-class>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
            <property-name>resetValues</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "execute" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "render" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Enables/disables polling to the server.  Using Expression Language (EL), the enabled attribute can point to a
 bean property to apply a particular attribute value
</description>
            <property-name>enabled</property-name>
            <property-class>boolean</property-class>
            <default-value>true</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the timer counts down, but before the Ajax request is initiated
</description>
            <property-name>ontimer</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">timer</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Specifies the time in milliseconds between requests. The default for this value is 1000 ms (1 second)
</description>
            <property-name>interval</property-name>
            <property-class>int</property-class>
            <default-value>Integer.MIN_VALUE</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractPoll</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>poll</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.AjaxPollHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>org.richfaces.Poll</cdk:component-family>
            <cdk:renderer-type>org.richfaces.PollRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <component>
        <description> &lt;p&gt;
 The &amp;lt;a4j:commandLink&amp;gt; component is similar to the JavaServer Faces (JSF) &amp;lt;h:commandLink&amp;gt; component, except that it
 includes plugged-in Ajax behavior.
 &lt;/p&gt;
 @author Nick Belaevski
</description>
        <component-type>org.richfaces.CommandLink</component-type>
        <component-class>org.richfaces.component.UICommandLink</component-class>
        <property>
            <description>Access key that, when pressed, transfers focus to this element.</description>
            <property-name>accesskey</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.</description>
            <property-name>resetValues</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the DOM is updated</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Name of the request status component that will indicate the status of the Ajax request</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called after the ajax response comes back, but before the DOM is updated</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The client-side script method to be called before an ajax request.</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "execute" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized and used with data</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "render" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>If "true", after process validations phase it skips updates of model beans on a force render response.  It can be used for validating components input.</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>CSS style(s) to be applied when this component is rendered.</description>
            <display-name>CSS Styles</display-name>
            <property-name>style</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Space-separated list of CSS style class(es) to be applied when this element is rendered. This value must be passed through as the "class" attribute on generated markup.</description>
            <display-name>CSS Style Classes</display-name>
            <property-name>styleClass</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Advisory title information about markup elements generated for this component.</description>
            <display-name>Advisory Title</display-name>
            <property-name>title</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>A reverse link from the anchor specified by this hyperlink to the current document. The value of this attribute is a space-separated list of link types.</description>
            <display-name>Reverse Link</display-name>
            <property-name>rev</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved away from this element.</description>
            <display-name>Mouse Out Script</display-name>
            <property-name>onmouseout</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseout</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The content type of the resource designated by this hyperlink.</description>
            <display-name>Content Type</display-name>
            <property-name>type</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is double clicked over this element.</description>
            <display-name>Double Click Script</display-name>
            <property-name>ondblclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">dblclick</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed down over this element.</description>
            <display-name>Key Down Script</display-name>
            <property-name>onkeydown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keydown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The character encoding of the resource designated by this hyperlink.</description>
            <display-name>Character Set</display-name>
            <property-name>charset</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The shape of the hot spot on the screen (for use in client-side image maps). Valid values are: default (entire region); rect (rectangular region); circle (circular region); and poly (polygonal region).</description>
            <display-name>Shape</display-name>
            <property-name>shape</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is pressed and released over this element.</description>
            <display-name>Key Press Script</display-name>
            <property-name>onkeypress</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keypress</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a key is released over this element.</description>
            <display-name>Key Up Script</display-name>
            <property-name>onkeyup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">keyup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The position and shape of the hot spot on the screen (for use in client-side image maps).</description>
            <display-name>Coordinates</display-name>
            <property-name>coords</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The language code of the resource designated by this hyperlink.</description>
            <display-name>Language</display-name>
            <property-name>hreflang</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is released over this element.</description>
            <display-name>Mouse Up Script</display-name>
            <property-name>onmouseup</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseup</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Flag indicating that this element must never receive focus or be included in a subsequent submit. Default value - "false"</description>
            <display-name>Disabled Flag</display-name>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is pressed down over this element.</description>
            <display-name>Mouse Down Script</display-name>
            <property-name>onmousedown</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousedown</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The relationship from the current document to the anchor specified by this hyperlink. The value of this attribute is a space-separated list of link types.</description>
            <display-name>Relationship</display-name>
            <property-name>rel</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is clicked over this element.</description>
            <display-name>Button Click Script</display-name>
            <property-name>onclick</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="true">click</cdk:event-name>
                <cdk:event-name default="false">action</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved onto this element.</description>
            <display-name>Mouse Over Script</display-name>
            <property-name>onmouseover</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mouseover</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>Javascript code executed when a pointer button is moved within this element.</description>
            <display-name>Mouse Move Script</display-name>
            <property-name>onmousemove</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">mousemove</cdk:event-name>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>true</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>The value binding expression used to wire up this
            component to a component property of a JavaBean class
        </description>
            <display-name></display-name>
            <icon/>
            <property-name>binding</property-name>
            <property-class>javax.faces.component.UIComponent</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The component identifier for this component. This value must be
            unique within the closest parent component
            that is a naming
            container.
        </description>
            <display-name>Component Identifier</display-name>
            <icon/>
            <property-name>id</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating whether or not this component should be rendered
            (during Render Response Phase), or
            processed on any subsequent
            form submit. The default value for this property is true.
        </description>
            <display-name>Rendered Flag</display-name>
            <icon/>
            <property-name>rendered</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            MethodExpression representing the application action to invoke
            when this component is activated by the user.
            The expression
            must evaluate to a public method that takes no parameters, and
            returns an Object (the toString() of
            which is called to derive
            the logical outcome) which is passed to the NavigationHandler
            for this application.
        </description>
            <display-name>Application Action</display-name>
            <icon/>
            <property-name>action</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            &lt;p&gt;

            MethodExpression representing an action listener method that
            will be notified when this component
            is activated by the user.
            The expression must evaluate to a public method that takes an
            ActionEvent parameter, with a
            return type of void, &lt;span
            class="changed_added_2_0"&gt;or to a public method that takes no
            arguments with a return
            type of void. In the latter case, the
            method has no way of easily knowing where the event came from,
            but this can be
            useful in cases where a notification is needed
            that "some action happened".&lt;/span&gt;

            &lt;/p&gt; </description>
            <display-name>Action Listener</display-name>
            <icon/>
            <property-name>actionListener</property-name>
            <property-class>javax.faces.el.MethodBinding</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
                <cdk:signature>
                    <cdk:param>javax.faces.event.ActionEvent</cdk:param>
                    <cdk:return-type>java.lang.Void</cdk:return-type>
                </cdk:signature>
            </property-extension>
        </property>
        <property>
            <description>
            Flag indicating that, if this component is activated by the user,
            notifications should be delivered to
            interested listeners and actions
            immediately (that is, during Apply Request Values phase) rather than
            waiting until
            Invoke Application phase.
        </description>
            <display-name>Immediate Action</display-name>
            <icon/>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>Boolean.FALSE</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description>
            The current value of this component.
        </description>
            <display-name>Value</display-name>
            <icon/>
            <property-name>value</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> This attribute specifies the position of the current element in the tabbing order for the current document.
 This value must be a number between 0 and 32767. User agents should ignore leading zeros
</description>
            <property-name>tabindex</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>true</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <component-extension>
            <cdk:base-class>org.richfaces.component.AbstractCommandLink</cdk:base-class>
            <cdk:generate>true</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>commandLink</cdk:tag-name>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:component-family>javax.faces.Command</cdk:component-family>
            <cdk:renderer-type>org.richfaces.CommandLinkRenderer</cdk:renderer-type>
        </component-extension>
    </component>
    <render-kit>
        <render-kit-id>HTML_BASIC</render-kit-id>
        <renderer>
            <description> @author Nick Belaevski

</description>
            <component-family>javax.faces.Output</component-family>
            <renderer-type>org.richfaces.QueueResourceComponentRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.QueueResourceComponentRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author shura

</description>
            <component-family>org.richfaces.MediaOutput</component-family>
            <renderer-type>org.richfaces.MediaOutputRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.MediaOutputRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Nick Belaevski Renderer for attachedQueue component
</description>
            <component-family>org.richfaces.AttachQueue</component-family>
            <renderer-type>org.richfaces.AttachQueueRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AttachQueueRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author asmirnov@exadel.com (latest modification by $Author: alexsmirnov $)
 @version $Revision: 1.1.2.1 $ $Date: 2007/02/01 15:31:27 $
</description>
            <component-family>javax.faces.Panel</component-family>
            <renderer-type>org.richfaces.OutputPanelRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AjaxOutputPanelRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Nick Belaevski
</description>
            <component-family>org.richfaces.Status</component-family>
            <renderer-type>org.richfaces.StatusRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AjaxStatusRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Nick Belaevski

</description>
            <component-family>javax.faces.Data</component-family>
            <renderer-type>org.richfaces.RepeatRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.RepeatRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author shura
</description>
            <component-family>org.richfaces.Poll</component-family>
            <renderer-type>org.richfaces.PollRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AjaxPollRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <description> @author Nick Belaevski Renderer for queue component
</description>
            <component-family>org.richfaces.Queue</component-family>
            <renderer-type>org.richfaces.QueueRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.QueueRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Command</component-family>
            <renderer-type>org.richfaces.FunctionRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AjaxFunctionRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Command</component-family>
            <renderer-type>org.richfaces.CommandLinkRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.CommandLinkRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.Push</component-family>
            <renderer-type>org.richfaces.PushRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.PushRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>true</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>javax.faces.Command</component-family>
            <renderer-type>org.richfaces.CommandButtonRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.CommandButtonRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <renderer>
            <component-family>org.richfaces.AjaxLog</component-family>
            <renderer-type>org.richfaces.AjaxLogRenderer</renderer-type>
            <renderer-class>org.richfaces.renderkit.html.AjaxLogRenderer</renderer-class>
            <renderer-extension>
                <cdk:renders-children>false</cdk:renders-children>
            </renderer-extension>
        </renderer>
        <client-behavior-renderer>
            <client-behavior-renderer-type>org.ajax4jsf.behavior.Ajax</client-behavior-renderer-type>
            <client-behavior-renderer-class>org.ajax4jsf.renderkit.AjaxBehaviorRenderer</client-behavior-renderer-class>
        </client-behavior-renderer>
        <render-kit-extension/>
    </render-kit>
    <behavior>
        <description> &lt;p&gt;
 The &amp;lt;a4j:ajax&amp;gt; behavior allows Ajax capability to be added to a non-Ajax component. The non-Ajax component must
 implement the ClientBehaviorHolder interface for all the event attributes that support behavior rendering.
 &lt;/p&gt;
 @author Anton Belevich
</description>
        <behavior-id>org.ajax4jsf.behavior.Ajax</behavior-id>
        <behavior-class>org.ajax4jsf.component.behavior.AjaxBehavior</behavior-class>
        <property>
            <description> If "true", render only those ids specified in the "render" attribute, forgoing the render of the auto-rendered panels
</description>
            <property-name>limitRender</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.
</description>
            <property-name>resetValues</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the DOM is updated
</description>
            <property-name>oncomplete</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">complete</cdk:event-name>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> ID of the request status component
</description>
            <property-name>status</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called after the ajax response comes back, but before the DOM is updated
</description>
            <property-name>onbeforedomupdate</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">beforedomupdate</cdk:event-name>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before an ajax request.
</description>
            <property-name>onbegin</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:event-name default="false">begin</cdk:event-name>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "execute" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>execute</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Serialized (on default with JSON) data passed to the client by a developer on an AJAX request. It's accessible
 via "event.data" syntax. Both primitive types and complex types such as arrays and collections can be serialized
 and used with data
</description>
            <property-name>data</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Ids of components that will participate in the "render" portion of the Request Processing Lifecycle.
 Can be a single id, a space or comma separated list of Id's, or an EL Expression evaluating to an array or Collection.
 Any of the keywords "@this", "@form", "@all", "@none", "@region" may be specified in the identifier list.
 Some components make use of additional keywords
</description>
            <property-name>render</property-name>
            <property-class>java.lang.Object</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Identify the name of the destination queue
</description>
            <property-name>queueId</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true", after process validations phase it skips updates of model beans on a force render response.
 It can be used for validating components input
</description>
            <property-name>bypassUpdates</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called before the AJAX request is submitted
</description>
            <property-name>onbeforesubmit</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> The client-side script method to be called when an error has occurred during Ajax communications
</description>
            <property-name>onerror</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Flag indicating that, if this component is activated by the user, notifications should be delivered to interested
 listeners and actions immediately (that is, during Apply Request Values phase) rather than waiting until Invoke
 Application phase.
</description>
            <property-name>immediate</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> If "true", do not initiate an ajax request when the associated event is observed
</description>
            <property-name>disabled</property-name>
            <property-class>boolean</property-class>
            <default-value>false</default-value>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Name of JavaScript event property (click, change, etc.) of parent component that triggers the behavior.
 If the event attribute is not defined, the behavior is triggered on the event that normally provides
 interaction behavior for the parent component
</description>
            <property-name>event</property-name>
            <property-class>java.lang.String</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <property>
            <description> Method expression referencing a method that will be called when an AjaxBehaviorEvent has been broadcast for the listener.
</description>
            <property-name>listener</property-name>
            <property-class>javax.el.MethodExpression</property-class>
            <property-extension>
                <cdk:generate>false</cdk:generate>
                <cdk:hidden>false</cdk:hidden>
                <cdk:literal>false</cdk:literal>
                <cdk:pass-through>false</cdk:pass-through>
                <cdk:read-only>false</cdk:read-only>
                <cdk:required>false</cdk:required>
            </property-extension>
        </property>
        <behavior-extension>
            <cdk:base-class>org.ajax4jsf.component.behavior.AjaxBehavior</cdk:base-class>
            <cdk:generate>false</cdk:generate>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>ajax</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.AjaxHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
        </behavior-extension>
    </behavior>
    <faces-config-extension>
        <cdk:faces-event>
            <cdk:listener-class>javax.faces.event.ActionListener</cdk:listener-class>
            <cdk:listener-method>process</cdk:listener-method>
            <cdk:source-class>org.richfaces.event.DummyActionListenerSource</cdk:source-class>
            <cdk:tag>
                <cdk:generate>false</cdk:generate>
                <cdk:tag-name>actionListener</cdk:tag-name>
                <cdk:handler-class>org.richfaces.view.facelets.html.ActionListenerHandler</cdk:handler-class>
                <cdk:tag-type>Facelets</cdk:tag-type>
            </cdk:tag>
            <cdk:event-class>org.richfaces.view.facelets.html.LazyActionListener</cdk:event-class>
        </cdk:faces-event>
        <cdk:taglib>
            <cdk:shortName>a4j</cdk:shortName>
            <cdk:uri>http://richfaces.org/a4j</cdk:uri>
        </cdk:taglib>
    </faces-config-extension>
</faces-config>
